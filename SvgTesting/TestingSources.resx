<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Basic_Shapes" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\Basic Shapes.svg;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="NASALIZA" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\NASALIZA.TTF;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="SvgFragmentGroup" xml:space="preserve">
    <value>&lt;g&gt;
&lt;path fill="#000000" d="M102.937,32.635 C103.427,32.635 103.916,32.635 104.406,32.635 C105.795,32.717 107.245,32.831 108.679,32.969 C110.081,33.105 111.609,33.079 112.817,33.503 C113.815,33.853 114.951,35.040 115.955,35.840 C123.090,41.526 129.290,48.625 133.579,56.735 C129.501,55.917 125.209,55.313 120.895,54.732 C116.812,45.485 110.647,38.322 102.938,32.702 C102.937,32.680 102.937,32.658 102.937,32.635 M115.021,54.131 C91.203,51.901 66.796,54.653 48.131,60.006 C48.050,59.734 48.329,59.516 48.465,59.338 C53.839,52.278 60.451,46.379 68.358,41.715 C76.545,36.885 86.291,33.455 98.131,32.769 C98.282,32.760 99.065,32.599 99.533,32.702 C100.253,32.860 101.464,34.164 102.137,34.772 C107.673,39.779 112.597,46.484 115.021,54.131 M126.369,37.242 C133.543,39.786 140.339,44.184 145.861,48.924 C146.601,49.558 147.975,50.468 148.131,51.060 C148.238,51.467 148.081,51.939 148.064,52.328 C147.957,54.872 148.028,57.460 148.198,60.072 C146.114,59.485 143.996,58.933 141.789,58.470 C137.793,50.249 132.627,43.200 126.369,37.242 M152.737,55.800 C153.242,56.195 152.653,55.593 152.604,55.533 C149.798,52.080 146.148,48.838 142.924,46.121 C159.154,44.086 180.558,43.581 191.923,50.527 C196.227,53.157 200.000,57.186 199.533,64.144 C199.223,68.761 196.883,72.679 194.726,75.760 C192.406,79.074 189.724,81.868 186.983,84.438 C181.188,89.872 174.855,94.526 168.358,98.523 C168.149,97.198 168.625,95.481 168.225,94.184 C168.109,93.811 167.481,93.206 167.090,92.716 C161.364,85.540 156.996,77.430 154.406,67.081 C156.970,67.788 159.407,68.623 161.883,69.418 C164.401,74.176 166.282,79.571 167.624,85.506 C170.845,82.550 174.596,78.814 176.836,74.358 C177.808,72.424 178.758,70.316 178.505,67.415 C178.077,62.513 173.035,59.972 168.959,58.603 C164.271,57.030 158.910,56.373 153.138,56.067 C154.694,58.271 156.768,60.535 158.212,63.076 C156.598,62.531 155.000,61.971 153.272,61.541 C153.089,59.799 152.612,57.270 152.737,55.800 M116.489,60.539 C118.089,72.485 114.446,82.108 109.946,89.511 C105.351,97.072 99.472,103.358 92.790,108.603 C79.255,119.231 62.515,126.958 42.790,131.167 C41.846,129.129 40.790,127.203 39.987,125.025 C38.094,127.436 36.123,130.506 34.846,133.904 C33.452,137.615 32.973,141.915 35.381,144.985 C39.363,150.065 48.880,150.739 58.011,150.393 C57.784,149.894 57.280,149.620 56.876,149.258 C55.651,148.159 54.474,146.880 53.271,145.653 C51.689,144.039 50.156,142.318 48.999,140.513 C59.225,137.977 68.733,134.336 77.437,130.032 C86.039,125.778 94.087,120.597 100.868,114.545 C107.619,108.519 113.792,101.600 118.224,92.983 C120.319,88.909 122.293,84.035 123.297,78.630 C124.285,73.315 124.203,66.526 122.830,61.007 C127.552,61.447 132.067,62.095 136.448,62.876 C140.545,71.898 142.675,84.071 141.455,97.054 C140.329,109.028 136.686,119.141 132.510,127.895 C136.118,126.275 139.543,124.470 142.990,122.688 C145.995,114.503 148.428,105.016 148.931,94.184 C149.459,82.838 147.340,72.774 144.326,64.477 C145.833,64.772 147.222,65.185 148.732,65.479 C151.350,83.399 158.931,96.357 168.825,107.001 C174.082,103.502 179.448,99.860 184.646,96.187 C189.849,92.509 194.978,88.810 198.664,83.770 C199.343,86.973 197.764,89.654 196.328,91.781 C194.865,93.947 193.078,95.794 191.321,97.455 C187.628,100.947 183.545,104.086 179.506,107.001 C154.650,124.936 127.432,140.319 96.061,151.728 C85.621,155.525 74.805,158.736 62.884,161.274 C46.503,164.761 18.576,167.401 13.551,151.862 C11.578,145.759 14.265,139.166 16.555,134.973 C21.593,125.751 28.836,118.771 36.115,111.808 C33.462,98.613 35.855,83.355 40.187,73.758 C53.293,68.205 67.877,63.569 84.580,61.541 C94.386,60.350 105.709,59.766 116.489,60.539 M37.784,117.549 C37.595,117.137 37.613,116.517 37.383,116.147 C37.317,116.514 37.621,117.413 37.784,117.549 M36.983,81.968 C36.682,84.181 35.947,86.540 35.714,89.044 C29.497,92.035 23.658,94.933 18.024,98.323 C12.443,101.681 7.065,105.517 .000,107.202 C.719,105.488 2.123,104.154 3.471,102.929 C4.821,101.704 6.314,100.552 7.744,99.458 C16.523,92.740 26.716,87.151 36.983,81.968 M115.554,165.412 C115.386,165.207 115.886,164.968 116.089,164.745 C123.029,157.123 129.841,148.883 135.047,139.445 C145.628,134.093 155.592,128.124 165.287,121.888 C165.363,121.901 165.324,121.955 165.287,121.955 C161.231,133.284 154.834,142.652 146.596,149.858 C138.360,157.062 128.230,162.722 115.554,165.412 M121.295,146.120 C116.396,153.108 109.890,159.781 103.338,165.613 C102.824,166.071 102.353,166.661 102.003,166.748 C101.120,166.968 99.686,166.669 98.532,166.614 C90.525,166.236 83.929,164.521 77.904,162.276 C93.273,157.796 107.693,152.366 121.295,146.120 " /&gt;
&lt;/g&gt;</value>
    <comment>A ball with a swooshy thing around it.</comment>
  </data>
  <data name="WithImage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\Design Contest-306654A-Front Center.svg;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>